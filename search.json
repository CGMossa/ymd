[{"path":"https://shrektan.github.io/ymd/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 ymd authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://shrektan.github.io/ymd/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Xianying Tan. Author, maintainer.","code":""},{"path":"https://shrektan.github.io/ymd/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Tan X (2022). ymd: Handle YMD Dates. https://shrektan.github.io/ymd/, https://github.com/shrektan/ymd.","code":"@Manual{,   title = {ymd: Handle YMD Dates},   author = {Xianying Tan},   year = {2022},   note = {https://shrektan.github.io/ymd/, https://github.com/shrektan/ymd}, }"},{"path":"https://shrektan.github.io/ymd/index.html","id":"ymd","dir":"","previous_headings":"","what":"Handle YMD Dates","title":"Handle YMD Dates","text":"Handle common ymd Date Operations R using Rust. converts ymd integers strings Date, e.g., 211225 .Date(\"2021-12-25\") provides addition helper functions like bop eop (quick finding begining ending period, e.g., 1st date year month). ’s similar lubridate package much lighter focuses Date objects.","code":""},{"path":"https://shrektan.github.io/ymd/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Handle YMD Dates","text":"Note, order compile package source need Rust toolchain, can found Rust’s official website.","code":""},{"path":"https://shrektan.github.io/ymd/index.html","id":"some-use-case-and-benchmarks","dir":"","previous_headings":"","what":"Some use case and benchmarks","title":"Handle YMD Dates","text":"","code":"x <- c(\"210101\", \"21/02/03\", \"89-1-03\", \"1989.03.05\") x <- rep(x, 100) bench::mark(   ymd::ymd(x),   lubridate::ymd(x), time_unit = \"us\" ) #> # A tibble: 2 × 6 #>   expression           min median `itr/sec` mem_alloc `gc/sec` #>   <bch:expr>         <dbl>  <dbl>     <dbl> <bch:byt>    <dbl> #> 1 ymd::ymd(x)         33.0   34.1    29096.   209.5KB      0   #> 2 lubridate::ymd(x) 1842.  1906.       517.     8.2MB     19.9  x <- c(210101, 210224, 211231, 19890103) x <- rep(x, 100) bench::mark(   ymd::ymd(x),   lubridate::ymd(x), time_unit = \"us\" ) #> # A tibble: 2 × 6 #>   expression           min median `itr/sec` mem_alloc `gc/sec` #>   <bch:expr>         <dbl>  <dbl>     <dbl> <bch:byt>    <dbl> #> 1 ymd::ymd(x)         11.8   12.3    79154.    3.17KB      0   #> 2 lubridate::ymd(x) 1679.  1709.       583.  373.41KB     22.0  x <- c(\"2021-01-01\", \"2022-12-31\", \"1995-03-22\") x <- rep(x, 100) bench::mark(   ymd::ymd(x),   lubridate::ymd(x), time_unit = \"us\",   as.Date(x) ) #> # A tibble: 3 × 6 #>   expression          min median `itr/sec` mem_alloc `gc/sec` #>   <bch:expr>        <dbl>  <dbl>     <dbl> <bch:byt>    <dbl> #> 1 ymd::ymd(x)        32.1   33.1    29449.    2.39KB     2.95 #> 2 lubridate::ymd(x) 782.   821.      1198.   201.1KB    19.7  #> 3 as.Date(x)        662.   678.      1462.   87.54KB     2.02  x <- ymd::ymd(210515) + 1:100 bench::mark(   ymd::eop$tm(x),   lubridate::ceiling_date(x, \"month\") - 1 ) #> # A tibble: 2 × 6 #>   expression                                   min   median `itr/sec` mem_alloc #>   <bch:expr>                              <bch:tm> <bch:tm>     <dbl> <bch:byt> #> 1 ymd::eop$tm(x)                            5.54µs   6.19µs   159218.    19.2KB #> 2 lubridate::ceiling_date(x, \"month\") - 1  94.87µs 101.52µs     9594.   255.1KB #> # … with 1 more variable: gc/sec <dbl>  `%m+%` <- lubridate::`%m+%` x <- ymd::ymd(c(200115, 200131, 200229, 200331, 200401)) bench::mark(   ymd::edate(x, 2),   x %m+% months(2) ) #> # A tibble: 2 × 6 #>   expression            min   median `itr/sec` mem_alloc `gc/sec` #>   <bch:expr>       <bch:tm> <bch:tm>     <dbl> <bch:byt>    <dbl> #> 1 ymd::edate(x, 2)   1.07µs   1.39µs   652474.    2.24KB      0   #> 2 x %m+% months(2) 146.21µs 155.23µs     6307.  299.23KB     48.1 bench::mark(   ymd::edate(x, -12),   x %m+% months(-12) ) #> # A tibble: 2 × 6 #>   expression              min   median `itr/sec` mem_alloc `gc/sec` #>   <bch:expr>         <bch:tm> <bch:tm>     <dbl> <bch:byt>    <dbl> #> 1 ymd::edate(x, -12)   1.19µs   1.56µs   627858.        0B      0   #> 2 x %m+% months(-12) 573.47µs 591.79µs     1666.    94.8KB     48.2"},{"path":"https://shrektan.github.io/ymd/reference/beop.html","id":null,"dir":"Reference","previous_headings":"","what":"Begin/End of Period (BOP and EOP) — beop","title":"Begin/End of Period (BOP and EOP) — beop","text":"list BOP/EOP functions.","code":""},{"path":"https://shrektan.github.io/ymd/reference/beop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Begin/End of Period (BOP and EOP) — beop","text":"","code":"eop  bop"},{"path":"https://shrektan.github.io/ymd/reference/beop.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Begin/End of Period (BOP and EOP) — beop","text":"object class list length 12. object class list length 12.","code":""},{"path":"https://shrektan.github.io/ymd/reference/beop.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Begin/End of Period (BOP and EOP) — beop","text":"bop eop provides list functions. names consist two letters, first means last, , next second means year, quarter, month, week. Thus, eop$ty() means \"end period year\".","code":""},{"path":"https://shrektan.github.io/ymd/reference/edate.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the date before / after months — edate","title":"Calculate the date before / after months — edate","text":"Calculate date / months","code":""},{"path":"https://shrektan.github.io/ymd/reference/edate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the date before / after months — edate","text":"","code":"edate(ref_date, months)"},{"path":"https://shrektan.github.io/ymd/reference/edate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the date before / after months — edate","text":"ref_date Date vector months number months added ref_date","code":""},{"path":"https://shrektan.github.io/ymd/reference/edate.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Calculate the date before / after months — edate","text":"function name Excel function EDATE() . returns date indicated number months ref date.","code":""},{"path":"https://shrektan.github.io/ymd/reference/ymd.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert integers or strings to Date — ymd","title":"Convert integers or strings to Date — ymd","text":"Convert integers strings Date","code":""},{"path":"https://shrektan.github.io/ymd/reference/ymd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert integers or strings to Date — ymd","text":"","code":"ymd(x)"},{"path":"https://shrektan.github.io/ymd/reference/ymd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert integers or strings to Date — ymd","text":"x integerable string vector ymd format","code":""},{"path":"https://shrektan.github.io/ymd/reference/ymd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert integers or strings to Date — ymd","text":"Date object","code":""},{"path":"https://shrektan.github.io/ymd/news/index.html","id":"ymd-001","dir":"Changelog","previous_headings":"","what":"ymd 0.0.1","title":"ymd 0.0.1","text":"Added NEWS.md file track changes package.","code":""}]
